{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/liebchen/Code/thomas/server/src/app/api/chat/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nconst HARDCODED_TOKEN = 'my_hardcoded_token'; // TODO: Replace with env var or config in future\n\nexport async function POST(req: NextRequest) {\n  try {\n    const body = await req.json();\n    const { auth_token, message } = body;\n    console.log('[POST /chat] Incoming:', { auth_token, message });\n\n    if (auth_token !== HARDCODED_TOKEN) {\n      console.warn('[POST /chat] Invalid auth token:', auth_token);\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    // Placeholder for chat logic: echo the message\n    const reply = `Echo: ${message}`;\n    console.log('[POST /chat] Reply:', reply);\n\n    return NextResponse.json({ reply });\n  } catch (error) {\n    console.error('[POST /chat] Error:', error);\n    return NextResponse.json({ error: 'Invalid request' }, { status: 400 });\n  }\n} "],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB,sBAAsB,iDAAiD;AAExF,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG;QAChC,QAAQ,GAAG,CAAC,0BAA0B;YAAE;YAAY;QAAQ;QAE5D,IAAI,eAAe,iBAAiB;YAClC,QAAQ,IAAI,CAAC,oCAAoC;YACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,+CAA+C;QAC/C,MAAM,QAAQ,CAAC,MAAM,EAAE,SAAS;QAChC,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE;QAAM;IACnC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACvE;AACF","debugId":null}}]
}